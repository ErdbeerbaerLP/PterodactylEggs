{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2022-09-02T14:07:13+02:00",
    "name": "Fosscord",
    "author": "admin@erdbeerbaerlp.de",
    "description": null,
    "features": null,
    "docker_images": {
        "ghcr.io\/parkervcp\/yolks:nodejs_16": "ghcr.io\/parkervcp\/yolks:nodejs_16"
    },
    "file_denylist": [],
    "startup": "npm run start",
    "config": {
        "files": "{}",
        "startup": "{\r\n    \"done\": \"worker 0 started\"\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n\r\napt update \r\napt install -y git curl jq file unzip make gcc g++ python3 python-dev libtool build-essential\r\n\r\nmkdir -p \/mnt\/server\r\ncd \/mnt\/server\r\n\r\nif [ \"$(ls -A \/mnt\/server)\" ]; then\r\n    echo -e \"\/mnt\/server directory is not empty.\"\r\n    if [ -d .git ]; then\r\n        echo -e \".git directory exists\"\r\n        if [ -f .git\/config ]; then\r\n            echo -e \"loading info from git config\"\r\n            ORIGIN=$(git config --get remote.origin.url)\r\n        else\r\n            echo -e \"files found with no git config\"\r\n            echo -e \"closing out without touching things to not break anything\"\r\n            exit 10\r\n        fi\r\n    fi\r\n    echo \"pulling latest from github\"\r\n    git reset --hard HEAD\r\n    git pull\r\n    npm run setup\r\nelse\r\n    echo -e \"\/mnt\/server is empty.\\ncloning files into repo\"\r\n        echo -e \"cloning default branch\"\r\n        git clone https:\/\/github.com\/fosscord\/fosscord-server.git .\r\nfi\r\n\r\necho \"Installing nodejs packages\"\r\nnpm install patch-package\r\nnpm install mysql --save\r\nnpm install node-2fa --save\r\nnpm i @yukikaze-bot\/erlpack --save\r\nnpm install bcrypt --save\r\nnpm install canvas --save\r\nnpm run setup\r\necho -e \"install complete\"\r\nexit 0",
            "container": "node:16-buster-slim",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Database",
            "description": "Database URL to use, check fosscord documentation for more information\r\nFormat: [type]:\/\/[username]:[password]@[address]\/[dbname]",
            "env_variable": "DATABASE",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Storage location",
            "description": "Storage location for CDN files",
            "env_variable": "STORAGE_LOCATION",
            "default_value": "\/home\/container\/files",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Threads",
            "description": "Maximum threads to use",
            "env_variable": "THREADS",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "numeric",
            "field_type": "text"
        }
    ]
}